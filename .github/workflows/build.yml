name: build

on:
  push:
    branches:
      - main
      - 'renovate/**'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 18
  LOG_LEVEL: debug

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Cache yarn
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: |
            node_modules
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install

  test:
    needs: prepare
    runs-on: ubuntu-latest

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    steps:
      - name: Init platform
        id: init
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          fetch-depth: 10 # required by codecov

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Cache yarn
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: |
            node_modules
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          fail-on-cache-miss: true

      - run: yarn install

      - name: lint
        run: |
          yarn eslint -f gha
          yarn prettier

      - run: yarn compile

      - run: yarn jest --maxWorkers=2 --ci --coverage
        env:
          FORCE_COLOR: true

      - name: Upload coverage
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: always()
        with:
          name: coverage
          path: coverage

      - name: Codecov
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # tag=v3.1.1

  e2e:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Cache yarn
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: |
            node_modules
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          fail-on-cache-miss: true

      - run: yarn install

      - run: yarn compile

      - name: docker-config
        uses: ./
        with:
          command: docker-config

      - name: Prepare e2e
        run: |
          docker pull alpine
          docker tag alpine renovate/ubuntu
          docker tag alpine renovate/ubuntu:18.04

      - name: docker-builder (node)
        uses: ./
        with:
          command: docker-builder
          image-prefix: containerbase/
          image: node
          config: e2e/node.json
          dry-run: true
          prune: true

      - name: docker-builder (yarn)
        uses: ./
        with:
          command: docker-builder
          config: e2e/yarn.json
          dry-run: true
          major-minor: false

      - name: docker-builder (python)
        uses: ./
        with:
          command: docker-builder
          config: e2e/python.json
          tag-suffix: 'slim'
          build-args: 'IMAGE=slim'
          dry-run: true

      - name: docker-builder (ubuntu)
        uses: ./
        with:
          command: docker-builder
          config: e2e/ubuntu.json
          dry-run: true

      - name: docker-builder (helm)
        uses: ./
        with:
          command: docker-builder
          config: e2e/helm.json
          dry-run: true
          token: ${{ github.token }}

      - name: docker-builder (java)
        uses: ./
        with:
          command: docker-builder
          config: e2e/java.json
          dry-run: true

      - name: binary-builder (python)
        uses: ./
        with:
          command: binary-builder
          config: e2e/python.json
          dry-run: true
          token: ${{ github.token }}
        env:
          DISTRO: focal
          ARCH: aarch64

      - name: dummy-command
        uses: ./
        with:
          command: dummy
          dry-run: true

  release:
    needs: [test, e2e]
    runs-on: ubuntu-latest

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    steps:
      - name: Init platform
        id: init
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          yarn config set version-git-tag false

      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          fetch-depth: 0
          ref: 'release'

      - name: fetch pr
        if: ${{github.event_name == 'pull_request'}}
        run: |
          git fetch origin +${{ github.sha }}:${{ github.ref }}

      - name: Merge
        id: merge
        run: |
          git merge --no-ff -m 'skip: merge (${{ github.sha }}) [skip release]' ${{ github.sha }}
          commit=$(git rev-parse HEAD)
          echo "commit=${commit}" >> $GITHUB_OUTPUT

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Cache yarn
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: |
            node_modules
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          fail-on-cache-miss: true

      - run: yarn install

      - name: Push release branch
        run: git push origin release:release
        if: ${{github.ref == 'refs/heads/main'}}

      - name: Release
        run: |
          # override for semantic-release
          export GITHUB_REF=refs/heads/release GITHUB_SHA=${{ steps.merge.outputs.commit }}
          yarn release
        if: ${{github.ref == 'refs/heads/main'}}
        env:
          GITHUB_TOKEN: ${{ github.token }}
