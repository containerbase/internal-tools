name: build

on:
  push:
  pull_request:

env:
  VERSION: v0
  NODE_VERSION: 12
  YARN_CACHE_KEY: v0
  YARN_CACHE_FOLDER: .cache/yarn
  # https://github.com/chalk/supports-color/issues/106
  FORCE_COLOR: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.repository_owner != github.event.pull_request.head.repo.owner.login }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2.3.4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # renovate: tag=v2.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2.1.6
        with:
          path: node_modules
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

  test:
    needs: prepare
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.repository_owner != github.event.pull_request.head.repo.owner.login }}

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    steps:
      - name: Init platform
        id: init
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2.3.4
        with:
          fetch-depth: 10 # required by codecov

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # renovate: tag=v2.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2.1.6
        with:
          path: node_modules
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: yarn lint

      - run: yarn compile

      - run: yarn jest --maxWorkers=2 --ci --coverage

      - name: Upload coverage
        uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 # renovate: tag=v2.2.4
        if: always()
        with:
          name: coverage
          path: coverage

      - name: Codecov
        uses: codecov/codecov-action@c585afe366f940d214dc09df2664c06d7fe07052 # renovate: tag=v2.0.1

  e2e:
    needs: prepare
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.repository_owner != github.event.pull_request.head.repo.owner.login }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2.3.4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # renovate: tag=v2.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2.1.6
        with:
          path: node_modules
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: yarn compile

      - name: docker-config
        uses: ./
        with:
          command: docker-config

      - name: Prepare e2e
        run: |
          docker pull alpine
          docker tag alpine renovate/ubuntu
          docker tag alpine renovate/ubuntu:18.04

      - name: docker-builder (node)
        uses: ./
        with:
          command: docker-builder
          image-prefix: containerbase/
          image: node
          config: e2e/node.json
          dry-run: true
          prune: true

      - name: docker-builder (yarn)
        uses: ./
        with:
          command: docker-builder
          config: e2e/yarn.json
          dry-run: true
          major-minor: false

      - name: docker-builder (python)
        uses: ./
        with:
          command: docker-builder
          config: e2e/python.json
          tag-suffix: 'slim'
          build-args: 'IMAGE=slim'
          dry-run: true

      - name: docker-builder (ubuntu)
        uses: ./
        with:
          command: docker-builder
          config: e2e/ubuntu.json
          dry-run: true

      - name: docker-builder (helm)
        uses: ./
        with:
          command: docker-builder
          config: e2e/helm.json
          dry-run: true

      - name: binary-builder (python)
        uses: ./
        with:
          command: binary-builder
          config: e2e/python.json
          dry-run: true
          token: ${{ github.token }}
        env:
          DISTRO: focal
          ARCH: aarch64

      - name: dummy-command
        uses: ./
        with:
          command: dummy
          dry-run: true

  release:
    needs: [test, e2e]
    if: ${{ github.event_name != 'pull_request' || github.repository_owner != github.event.pull_request.head.repo.owner.login }}
    runs-on: ubuntu-latest

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    steps:
      - name: Init platform
        id: init
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          yarn config set version-git-tag false

      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2.3.4
        with:
          fetch-depth: 0
          ref: 'release'

      - name: fetch pr
        if: ${{github.event_name == 'pull_request'}}
        run: |
          git fetch origin +${{ github.sha }}:${{ github.ref }}

      - name: Merge
        id: merge
        run: |
          git merge --no-ff -m 'skip: merge (${{ github.sha }}) [skip release]' ${{ github.sha }}
          commit=$(git rev-parse HEAD)
          echo "::set-output name=commit::${commit}"

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # renovate: tag=v2.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2.1.6
        with:
          path: node_modules
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

      - name: Push release branch
        run: git push origin release:release
        if: ${{github.ref == 'refs/heads/main'}}

      - name: Release
        run: |
          # override for semantic-release
          export GITHUB_REF=refs/heads/release GITHUB_SHA=${{ steps.merge.outputs.commit }}
          yarn release
        if: ${{github.ref == 'refs/heads/main'}}
        env:
          GITHUB_TOKEN: ${{ github.token }}
