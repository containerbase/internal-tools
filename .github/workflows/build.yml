name: build

on:
  push:
  pull_request:

env:
  CI: true
  VERSION: v0
  NODE_VERSION: 12
  BUILDX_VERSION: v0.3.1
  YARN_CACHE_KEY: v0
  # https://github.com/chalk/supports-color/issues/106
  FORCE_COLOR: true

jobs:
  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: github-cleanup
        uses: renovatebot/gh-action@v0
        continue-on-error: true
        with:
          command: github-cleanup
          token: ${{ secrets.GH_TOKEN }}

      - name: Init platform
        id: init
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      # Clear caches on cache miss, otherwise they will grow indefinitely
      - name: Clear yarn cache
        if: steps.yarn_cache_packages.outputs.cache-hit != 'true' && github.ref == 'refs/heads/master'
        run: yarn cache clean

  test:
    needs: cleanup
    runs-on: ubuntu-latest

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    steps:
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init platform
        id: init
        shell: bash
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: yarn lint

      - run: yarn compile

      - run: yarn jest --maxWorkers=2 --ci --coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: coverage
          path: coverage

      - name: Codecov
        shell: bash
        if: always()
        continue-on-error: true
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  e2e:
    needs: cleanup
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: ${{ env.BUILDX_VERSION }}

      - name: Init platform
        id: init
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: yarn compile

      - name: Prepare e2e
        run: |
          docker pull alpine
          docker tag alpine renovate/ubuntu
          docker tag alpine renovate/ubuntu:18.04

      - name: github-cleanup
        uses: ./
        with:
          command: github-cleanup
          token: ${{ github.token }}
          dry-run: true

      - name: docker-publish
        uses: ./
        with:
          command: docker-publish
          image: renovate/ubuntu
          tags: latest;18.04
          dry-run: true

      - name: docker-builder
        uses: ./
        with:
          command: docker-builder
          image: yarn
          dry-run: true

      - name: dummy-command
        uses: ./
        with:
          command: dummy
          dry-run: true

  release:
    needs: [test, e2e]
    runs-on: ubuntu-latest

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    steps:
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init platform
        id: init
        shell: bash
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          yarn config set version-git-tag false

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: yarn lint

      - run: yarn compile

      - name: Prepare
        run: |
          git checkout -b ${VERSION}
          git add -f dist/*
          git commit -m 'Published by pipeline'

      - name: Publish
        if: ${{github.ref == 'refs/heads/master'}}
        run: |
          git push -f origin ${VERSION}:${VERSION}
