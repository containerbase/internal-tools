name: Test CI

on:
  push:
    branches-ignore:
      - master

  pull_request:

env:
  CI: true

jobs:
  test:
    name: test
    runs-on: ubuntu-latest

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    strategy:
      matrix:
        node-version: [12]

    steps:
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - name: Init platform
        id: init
        shell: bash
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: v1-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: yarn lint

      - run: yarn compile

      - run: yarn jest --maxWorkers=2 --ci --coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: coverage
          path: coverage

      - name: Codecov
        shell: bash
        if: always()
        continue-on-error: true
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
