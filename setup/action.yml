name: 'Setup'
description: 'Setup runner'
inputs:
  checkout:
    description: 'Checkout repository'
    required: false
    default: 'true'
  node:
    description: 'Setup node and pnpm'
    required: false
    default: 'true'
  node-version:
    description: 'Override node version from .node-version file'
    required: false
    default: ''
  pnpm-cache:
    description: 'Paths to pnpm node_modules to cache'
    required: false
    default: 'node_modules'
  save-cache:
    description: 'Save cache when needed'
    required: false
    default: 'false'
  read-cache:
    description: 'Read cache when available'
    required: false
    default: 'true'
  apt-proxy:
    description: 'Setup apt proxy'
    required: false
    default: 'false'

runs:
  using: 'composite'

  steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      if: inputs.checkout == 'true'
      with:
        show-progress: false

    - shell: bash
      if: inputs.node == 'true'
      run: |
        os='${{ runner.os != 'Linux' && format('-{0}', runner.os) || '' }}'
        arch='${{ runner.arch != 'X64' && format('-{0}', runner.arch) || '' }}'
        if [ -n "${{ inputs.node-version }}" ]; then
          echo "CACHE_KEY=node_modules${os}${arch}-${{
            inputs.node-version
          }}-${{
            hashFiles('package.json', 'pnpm-lock.yaml', 'pnpm-workspace.yaml')
          }}" >> "$GITHUB_ENV"
        else
          echo "CACHE_KEY=node_modules${os}${arch}-${{
            hashFiles('.node-version', 'package.json', 'pnpm-lock.yaml', 'pnpm-workspace.yaml')
          }}" >> "$GITHUB_ENV"
        fi

    - uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      if: inputs.node == 'true' && inputs.read-cache == 'true' && runner.os != 'Windows'
      id: node-modules-restore
      with:
        path: ${{ inputs.pnpm-cache }}
        key: ${{ env.CACHE_KEY }}
        enableCrossOsArchive: true

    - shell: bash
      if: inputs.node == 'true' && inputs.read-cache == 'true'
      run: |
        echo 'CACHE_HIT=${{
          (steps.node-modules-restore.outputs.cache-hit == 'true') && 'true' || ''
        }}' >> "$GITHUB_ENV"

    - uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0
      if: inputs.node == 'true'
      # TODO: Use standalone version?
      # with:
      #   standalone: true

    - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
      if: inputs.node == 'true'
      with:
        node-version: ${{ inputs.node-version }}
        node-version-file: ${{ inputs.node-version == '' && '.node-version' || '' }}
        cache: ${{ (env.CACHE_HIT != 'true' || runner.os == 'Windows') && inputs.read-cache == 'true' && 'pnpm' || '' }}
        package-manager-cache: false

      # Ensure npm 11.5.1 or later for trusted publishing
    - shell: bash
      if: inputs.node == 'true' && runner.os == 'Linux'
      run: |
        set -ex
        npm --version
        command -v npm
        npm install -g npm
        npm --version
        command -v npm

    - if: inputs.node == 'true' && (env.CACHE_HIT != 'true' || runner.os == 'Windows')
      shell: bash
      run: pnpm install --frozen-lockfile
      env:
        # Other environment variables
        HUSKY: '0' # By default do not run HUSKY install

    - if: inputs.node == 'true' && inputs.save-cache == 'true' && env.CACHE_HIT != 'true' && runner.os != 'Windows'
      uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        path: ${{ inputs.pnpm-cache }}
        key: ${{ env.CACHE_KEY }}
        enableCrossOsArchive: true

    - if: inputs.apt-proxy == 'true'
      shell: bash
      run: |
        echo "::group::Preparing squid-deb-proxy"
        set -e
        sudo apt-get -qq update
        sudo apt-get install -y squid-deb-proxy
        echo "ppa.launchpad.net" | sudo tee -a /etc/squid-deb-proxy/mirror-dstdomain.acl.d/containerbase.acl
        sudo systemctl reload squid-deb-proxy
        echo "::endgroup::"
